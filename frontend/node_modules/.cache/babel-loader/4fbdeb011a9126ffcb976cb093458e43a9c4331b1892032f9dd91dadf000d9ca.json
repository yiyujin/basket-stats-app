{"ast":null,"code":"var _jsxFileName = \"/Users/yujinyi/Desktop/basket-stats-app/frontend/src/components/Chip.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chip({\n  text,\n  color\n}) {\n  const hexToRgba = (hex, opacity) => {\n    const bigint = parseInt(hex.replace('#', ''), 16);\n    const r = bigint >> 16 & 255;\n    const g = bigint >> 8 & 255;\n    const b = bigint & 255;\n    return `rgba(${r}, ${g}, ${b}, ${opacity})`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      width: \"16px\",\n      src: process.env.PUBLIC_URL + './fire.gif'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        backgroundColor: hexToRgba(color, 0.16),\n        color: color,\n        border: `1px solid ${hexToRgba(color, 0.16)}`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"chip\",\n        style: {\n          padding: \"0px 16px\"\n        },\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n_c = Chip;\nvar _c;\n$RefreshReg$(_c, \"Chip\");","map":{"version":3,"names":["Chip","text","color","hexToRgba","hex","opacity","bigint","parseInt","replace","r","g","b","_jsxDEV","children","width","src","process","env","PUBLIC_URL","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","backgroundColor","border","className","padding","_c","$RefreshReg$"],"sources":["/Users/yujinyi/Desktop/basket-stats-app/frontend/src/components/Chip.js"],"sourcesContent":["export default function Chip( { text, color }){\n    const hexToRgba = (hex, opacity) => {\n        const bigint = parseInt(hex.replace('#', ''), 16);\n        const r = (bigint >> 16) & 255;\n        const g = (bigint >> 8) & 255;\n        const b = bigint & 255;\n        \n        return `rgba(${r}, ${g}, ${b}, ${opacity})`;\n    };\n\n    return(\n        <div>\n            <img width = \"16px\" src = { process.env.PUBLIC_URL + './fire.gif' }/>\n\n            <div style = { { display : \"flex\", justifyContent : \"center\", backgroundColor : hexToRgba(color, 0.16), color : color, border : `1px solid ${hexToRgba(color, 0.16)}`} }>\n                <p className = \"chip\" style = { { padding : \"0px 16px\" } }>{ text }</p>\n            </div>\n        </div>\n    )\n}"],"mappings":";;AAAA,eAAe,SAASA,IAAIA,CAAE;EAAEC,IAAI;EAAEC;AAAM,CAAC,EAAC;EAC1C,MAAMC,SAAS,GAAGA,CAACC,GAAG,EAAEC,OAAO,KAAK;IAChC,MAAMC,MAAM,GAAGC,QAAQ,CAACH,GAAG,CAACI,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;IACjD,MAAMC,CAAC,GAAIH,MAAM,IAAI,EAAE,GAAI,GAAG;IAC9B,MAAMI,CAAC,GAAIJ,MAAM,IAAI,CAAC,GAAI,GAAG;IAC7B,MAAMK,CAAC,GAAGL,MAAM,GAAG,GAAG;IAEtB,OAAO,QAAQG,CAAC,KAAKC,CAAC,KAAKC,CAAC,KAAKN,OAAO,GAAG;EAC/C,CAAC;EAED,oBACIO,OAAA;IAAAC,QAAA,gBACID,OAAA;MAAKE,KAAK,EAAG,MAAM;MAACC,GAAG,EAAKC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAErEV,OAAA;MAAKW,KAAK,EAAK;QAAEC,OAAO,EAAG,MAAM;QAAEC,cAAc,EAAG,QAAQ;QAAEC,eAAe,EAAGvB,SAAS,CAACD,KAAK,EAAE,IAAI,CAAC;QAAEA,KAAK,EAAGA,KAAK;QAAEyB,MAAM,EAAG,aAAaxB,SAAS,CAACD,KAAK,EAAE,IAAI,CAAC;MAAE,CAAG;MAAAW,QAAA,eACpKD,OAAA;QAAGgB,SAAS,EAAG,MAAM;QAACL,KAAK,EAAK;UAAEM,OAAO,EAAG;QAAW,CAAG;QAAAhB,QAAA,EAAGZ;MAAI;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACQ,EAAA,GAnBuB9B,IAAI;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}