{"ast":null,"code":"var _jsxFileName = \"/Users/yujinyi/Desktop/basket-stats-app/frontend/src/pages/Login.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleLogin = () => {\n    if (!email || !password) {\n      setError(\"Email and password are required\");\n      return;\n    }\n    setError(\"\");\n    alert(`Logging in with: \\nEmail: ${email}\\nPassword: ${password}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: process.env.PUBLIC_URL + '/logo_black.png',\n      width: \"100\",\n      height: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"login-title\",\n      children: \"Basket Stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        className: \"login-button\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"/oUdbphBttpIcUsa7P1v1069QkA=\");\n_c = Login;\n;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","handleLogin","alert","className","children","src","process","env","PUBLIC_URL","width","height","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/yujinyi/Desktop/basket-stats-app/frontend/src/pages/Login.js"],"sourcesContent":["import { useState } from \"react\";\n\nexport default function Login(){\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleLogin = () => {\n    if (!email || !password) {\n      setError(\"Email and password are required\");\n      return;\n    }\n    setError(\"\");\n    alert(`Logging in with: \\nEmail: ${email}\\nPassword: ${password}`);\n  };\n\n  return (\n    <div className = \"login-page\">\n\n    <img src = { process.env.PUBLIC_URL + '/logo_black.png' } width = \"100\" height = \"100\" />\n\n    <h1 className = \"login-title\">Basket Stats</h1>\n\n    <div className = \"login-container\">\n      { error && <p className = \"error-text\">{ error }</p> }\n\n      <input type = \"email\" placeholder = \"Email\" value = { email } onChange = { (e) => setEmail(e.target.value) }/>\n      <input type = \"password\" placeholder = \"Password\" value = { password } onChange={ (e) => setPassword(e.target.value) }/>\n      \n      <button onClick = { handleLogin } className = \"login-button\">Login</button>\n    </div>\n\n  </div>\n  );\n};\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,KAAKA,CAAA,EAAE;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI,CAACN,KAAK,IAAI,CAACE,QAAQ,EAAE;MACvBG,QAAQ,CAAC,iCAAiC,CAAC;MAC3C;IACF;IACAA,QAAQ,CAAC,EAAE,CAAC;IACZE,KAAK,CAAC,6BAA6BP,KAAK,eAAeE,QAAQ,EAAE,CAAC;EACpE,CAAC;EAED,oBACEL,OAAA;IAAKW,SAAS,EAAG,YAAY;IAAAC,QAAA,gBAE7BZ,OAAA;MAAKa,GAAG,EAAKC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,iBAAmB;MAACC,KAAK,EAAG,KAAK;MAACC,MAAM,EAAG;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEzFtB,OAAA;MAAIW,SAAS,EAAG,aAAa;MAAAC,QAAA,EAAC;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE/CtB,OAAA;MAAKW,SAAS,EAAG,iBAAiB;MAAAC,QAAA,GAC9BL,KAAK,iBAAIP,OAAA;QAAGW,SAAS,EAAG,YAAY;QAAAC,QAAA,EAAGL;MAAK;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAEpDtB,OAAA;QAAOuB,IAAI,EAAG,OAAO;QAACC,WAAW,EAAG,OAAO;QAACC,KAAK,EAAKtB,KAAO;QAACuB,QAAQ,EAAMC,CAAC,IAAKvB,QAAQ,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC9GtB,OAAA;QAAOuB,IAAI,EAAG,UAAU;QAACC,WAAW,EAAG,UAAU;QAACC,KAAK,EAAKpB,QAAU;QAACqB,QAAQ,EAAIC,CAAC,IAAKrB,WAAW,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAExHtB,OAAA;QAAQ6B,OAAO,EAAKpB,WAAa;QAACE,SAAS,EAAG,cAAc;QAAAC,QAAA,EAAC;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAER;AAACpB,EAAA,CAhCuBD,KAAK;AAAA6B,EAAA,GAAL7B,KAAK;AAgC5B;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}