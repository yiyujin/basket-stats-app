{"ast":null,"code":"var _jsxFileName = \"/Users/yujinyi/Desktop/basket-stats-app/frontend/src/pages/Game.js\",\n  _s = $RefreshSig$();\nimport { useLocation } from \"react-router-dom\";\nimport { useState, useEffect, useRef } from \"react\";\nimport RecordingVideo from \"../components/RecordingVideo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  _s();\n  var _team$properties, _team$properties$Name, _team$properties$Name2, _team$properties$Name3;\n  const location = useLocation();\n  const {\n    team = {},\n    players = []\n  } = location.state || {}; // Ensure safe defaults\n  const teamName = ((_team$properties = team.properties) === null || _team$properties === void 0 ? void 0 : (_team$properties$Name = _team$properties.Name) === null || _team$properties$Name === void 0 ? void 0 : (_team$properties$Name2 = _team$properties$Name.title) === null || _team$properties$Name2 === void 0 ? void 0 : (_team$properties$Name3 = _team$properties$Name2[0]) === null || _team$properties$Name3 === void 0 ? void 0 : _team$properties$Name3.plain_text) || \"Unknown Team\";\n  const [data, setData] = useState([]); // playing players buttons\n\n  const [games, setGames] = useState([]);\n\n  // ------ RECORDING ------\n  const [recording, setRecording] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [videoURL, setVideoURL] = useState(null);\n  const [blobData, setBlobData] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [uploadedVideoUrl, setUploadedVideoUrl] = useState(null);\n  const [fetchedVideoUrl, setFetchedVideoUrl] = useState(null);\n  const streamRef = useRef(null);\n  const videoRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const chunksRef = useRef([]);\n  const timerRef = useRef(null);\n  const [timestamps, setTimestamps] = useState([]); // ✅ State for timestamps\n  const [timestampData, setTimestampData] = useState(null); // ✅ JSON output state\n\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n      streamRef.current = stream;\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      chunksRef.current = [];\n      mediaRecorder.ondataavailable = event => {\n        if (event.data.size > 0) {\n          chunksRef.current.push(event.data);\n        }\n      };\n      mediaRecorder.start(1000);\n      setRecording(true);\n      setTimestamps([]); // reset\n      setTimestampData(null); //reset\n\n      setDuration(0);\n      timerRef.current = setInterval(() => {\n        setDuration(prev => prev + 1);\n      }, 1000);\n      mediaRecorder.onstop = () => {\n        const blob = new Blob(chunksRef.current, {\n          type: \"video/webm\"\n        });\n        setVideoURL(URL.createObjectURL(blob));\n        setBlobData(blob);\n        clearInterval(timerRef.current);\n      };\n    } catch (error) {\n      console.log(`Camera access error : ${error.message}`);\n    }\n  };\n  const endRecording = () => {\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state !== \"inactive\") {\n      var _streamRef$current;\n      mediaRecorderRef.current.stop();\n      (_streamRef$current = streamRef.current) === null || _streamRef$current === void 0 ? void 0 : _streamRef$current.getTracks().forEach(track => track.stop());\n      setRecording(false);\n      clearInterval(timerRef.current);\n    }\n  };\n  const uploadRecording = async () => {\n    if (!blobData) {\n      console.log(`no blob data!`);\n      return;\n    }\n    try {\n      setUploading(true);\n      const formData = new FormData();\n      formData.append('video', blobData, 'recording.webm');\n      console.log(\"Uploading file of size:\", blobData.size);\n      const response = await fetch(\"http://localhost:8000/upload-video\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || data.details || `Server error: ${response.status}`);\n      }\n      setUploadedVideoUrl(data.fileUrl);\n\n      // await postUrl(\"Name of Video\", data.fileUrl);\n\n      alert(\"Video uploaded successfully!\");\n    } catch (error) {\n      console.error(\"Error during upload:\", error);\n      console.log(error.message);\n    } finally {\n      setUploading(false);\n    }\n  };\n  const getVideo = async () => {\n    if (!uploadedVideoUrl) {\n      alert(\"No uploaded video URL yet. Upload first!\");\n      return;\n    }\n    try {\n      const fileKey = uploadedVideoUrl.split(\"?\")[0].split(\"/\").pop();\n      console.log(\"Fetching video for fileKey:\", fileKey);\n      const response = await fetch(`http://localhost:8000/get-video-url/${fileKey}`);\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || `Server error: ${response.status}`);\n      }\n      console.log(\"Got presigned URL:\", data.fileUrl);\n      setFetchedVideoUrl(data.fileUrl);\n    } catch (error) {\n      console.error(\"Error fetching video URL:\", error);\n    }\n  };\n\n  // POST TO GAMES\n  const postToGames = async (name, url, log) => {\n    try {\n      const response = await fetch(\"http://localhost:8000/api/create-a-page-games\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name,\n          url,\n          log\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      console.log(\"Url is posted to DB successfully\");\n    } catch (error) {\n      console.error(\"Error posting url to DB:\", error.message);\n    }\n  };\n  const logTimestamp = (id, name) => {\n    if (recording) {\n      setTimestamps(prev => [...prev, {\n        id,\n        timestamp: duration,\n        name\n      }]);\n      console.log(`Timestamp recorded: ${id} - ${duration}s - ${name}`);\n    }\n  };\n  const fetchGames = async id => {\n    try {\n      const response = await fetch(\"http://localhost:8000/api/query-a-database-games\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const result = await response.json();\n      console.log(result);\n      setGames(result);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error.message);\n    }\n  };\n  useEffect(() => {\n    fetchGames(team.id);\n  }, []);\n\n  // -----------\n\n  const handleCheckboxChange = player => {\n    setData(prevData => {\n      if (prevData.some(p => p.id === player.id)) {\n        return prevData.filter(p => p.id !== player.id);\n      } else {\n        return [...prevData, {\n          id: player.id,\n          name: player.name\n        }];\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      paddingTop: \"64px\",\n      width: \"100vw\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"200px\",\n        minWidth: \"200px\",\n        height: \"100%\",\n        overflow: \"scroll\",\n        position: \"fixed\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Highlights (\", timestamps.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), timestamps.map((time, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          whiteSpace: \"nowrap\"\n        },\n        children: [\"\\u23F1 \", time.timestamp, \" : \", time.name, \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      style: {\n        width: \"100%\",\n        marginLeft: \"200px\",\n        flexGrow: 1,\n        flex: 1,\n        overflowY: \"auto\",\n        overflowX: \"hidden\",\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: teamName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"meta\",\n        children: \"Choose the game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        style: {\n          width: \"400x\"\n        },\n        children: games.map((item, index) => {\n          var _item$properties$team;\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            children: [\"vs. \", (_item$properties$team = item.properties.team_opponent.rich_text[0]) === null || _item$properties$team === void 0 ? void 0 : _item$properties$team.plain_text, \" | \", item.properties.Date.date.start]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          gap: \"8px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startRecording,\n          children: \"Start Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: endRecording,\n          disabled: !recording,\n          children: \"End Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: uploadRecording,\n          disabled: !videoURL || uploading,\n          children: uploading ? \"Uploading...\" : \"Upload Video to S3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getVideo,\n          disabled: !uploadedVideoUrl,\n          children: \"Get Uploaded Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => postToGames(\"Name test\", uploadedVideoUrl, JSON.stringify(timestamps)),\n          disabled: !videoURL || uploading || timestamps.length === 0,\n          children: \"POST to DB (Games)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logTimestamp,\n          disabled: !recording,\n          children: \"TEST Log Timestamp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => console.log(timestamps),\n          disabled: timestamps.length === 0,\n          children: \"Console.log Timestamp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: `${duration}s`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), blobData ? `size : ${blobData.size}bytes` : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          className: \"liveVideo\",\n          ref: videoRef,\n          style: {\n            display: videoURL && !recording ? 'none' : 'block'\n          },\n          autoPlay: true,\n          playsInline: true,\n          muted: true,\n          width: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), videoURL && !recording && /*#__PURE__*/_jsxDEV(\"video\", {\n          className: \"playbackVideo\",\n          src: videoURL,\n          controls: true,\n          width: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 40\n        }, this), fetchedVideoUrl && /*#__PURE__*/_jsxDEV(\"video\", {\n          className: \"fetchedVideo\",\n          src: fetchedVideoUrl,\n          controls: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Playing (\", data.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"meta\",\n        children: \"Press Player for Highlight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          gap: \"8px\"\n        },\n        children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => logTimestamp(item.id, item.name),\n          children: item.name\n        }, item.id || index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Players (\", players.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"meta\",\n        children: \"Select Players\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          gap: \"8px\",\n          width: \"100%\",\n          overflow: \"scroll\"\n        },\n        children: players.map((item, index) => {\n          var _item$properties, _item$properties$Name, _item$properties$Name2, _item$properties$Name3, _item$properties2, _item$properties2$fir, _item$properties2$fir2, _item$properties2$fir3, _item$properties3, _item$properties3$las, _item$properties3$las2, _item$properties3$las3, _item$properties4, _item$properties4$bac, _item$properties4$bac2, _item$properties4$bac3;\n          const playerName = ((_item$properties = item.properties) === null || _item$properties === void 0 ? void 0 : (_item$properties$Name = _item$properties.Name) === null || _item$properties$Name === void 0 ? void 0 : (_item$properties$Name2 = _item$properties$Name.title) === null || _item$properties$Name2 === void 0 ? void 0 : (_item$properties$Name3 = _item$properties$Name2[0]) === null || _item$properties$Name3 === void 0 ? void 0 : _item$properties$Name3.plain_text) || \"Unnamed Player\";\n          const firstName = ((_item$properties2 = item.properties) === null || _item$properties2 === void 0 ? void 0 : (_item$properties2$fir = _item$properties2.first_name) === null || _item$properties2$fir === void 0 ? void 0 : (_item$properties2$fir2 = _item$properties2$fir.rich_text) === null || _item$properties2$fir2 === void 0 ? void 0 : (_item$properties2$fir3 = _item$properties2$fir2[0]) === null || _item$properties2$fir3 === void 0 ? void 0 : _item$properties2$fir3.plain_text) || \"\";\n          const lastName = ((_item$properties3 = item.properties) === null || _item$properties3 === void 0 ? void 0 : (_item$properties3$las = _item$properties3.last_name) === null || _item$properties3$las === void 0 ? void 0 : (_item$properties3$las2 = _item$properties3$las.rich_text) === null || _item$properties3$las2 === void 0 ? void 0 : (_item$properties3$las3 = _item$properties3$las2[0]) === null || _item$properties3$las3 === void 0 ? void 0 : _item$properties3$las3.plain_text) || \"\";\n          const backNumber = ((_item$properties4 = item.properties) === null || _item$properties4 === void 0 ? void 0 : (_item$properties4$bac = _item$properties4.back_number) === null || _item$properties4$bac === void 0 ? void 0 : (_item$properties4$bac2 = _item$properties4$bac.rich_text) === null || _item$properties4$bac2 === void 0 ? void 0 : (_item$properties4$bac3 = _item$properties4$bac2[0]) === null || _item$properties4$bac3 === void 0 ? void 0 : _item$properties4$bac3.plain_text) || \"N/A\";\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: \"var(--black8)\",\n              padding: \"8px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"80px\",\n                height: \"80px\",\n                border: \"1px solid var(--black8)\",\n                backgroundPosition: \"center\",\n                backgroundImage: \"url(https://www.tottenhamhotspur.com/media/5y3crbxe/firstteam_profiles_mickyvandeven_202425_1.png?anchor=center&mode=crop&quality=90&width=500)\",\n                backgroundSize: \"cover\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"number\",\n              children: backNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: playerName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"meta\",\n              style: {\n                whiteSpace: \"normal\",\n                wordWrap: \"break-word\",\n                overflowWrap: \"break-word\"\n              },\n              children: [firstName, \" \", lastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: () => {\n                var _item$properties5, _item$properties5$Nam, _item$properties5$Nam2, _item$properties5$Nam3;\n                return handleCheckboxChange({\n                  id: item.id,\n                  name: ((_item$properties5 = item.properties) === null || _item$properties5 === void 0 ? void 0 : (_item$properties5$Nam = _item$properties5.Name) === null || _item$properties5$Nam === void 0 ? void 0 : (_item$properties5$Nam2 = _item$properties5$Nam.title) === null || _item$properties5$Nam2 === void 0 ? void 0 : (_item$properties5$Nam3 = _item$properties5$Nam2[0]) === null || _item$properties5$Nam3 === void 0 ? void 0 : _item$properties5$Nam3.plain_text) || \"Unknown\"\n                });\n              },\n              checked: data.some(p => p.id === item.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 25\n            }, this)]\n          }, item.id || index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"l2rK/4Uv6M/iAe1OovY3VF4YB5c=\", false, function () {\n  return [useLocation];\n});\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useLocation","useState","useEffect","useRef","RecordingVideo","jsxDEV","_jsxDEV","Game","_s","_team$properties","_team$properties$Name","_team$properties$Name2","_team$properties$Name3","location","team","players","state","teamName","properties","Name","title","plain_text","data","setData","games","setGames","recording","setRecording","duration","setDuration","videoURL","setVideoURL","blobData","setBlobData","uploading","setUploading","uploadedVideoUrl","setUploadedVideoUrl","fetchedVideoUrl","setFetchedVideoUrl","streamRef","videoRef","mediaRecorderRef","chunksRef","timerRef","timestamps","setTimestamps","timestampData","setTimestampData","startRecording","stream","navigator","mediaDevices","getUserMedia","video","audio","current","srcObject","mediaRecorder","MediaRecorder","ondataavailable","event","size","push","start","setInterval","prev","onstop","blob","Blob","type","URL","createObjectURL","clearInterval","error","console","log","message","endRecording","_streamRef$current","stop","getTracks","forEach","track","uploadRecording","formData","FormData","append","response","fetch","method","body","json","ok","Error","details","status","fileUrl","alert","getVideo","fileKey","split","pop","postToGames","name","url","headers","JSON","stringify","logTimestamp","id","timestamp","fetchGames","result","handleCheckboxChange","player","prevData","some","p","filter","style","display","flexDirection","paddingTop","width","height","children","minWidth","overflow","position","length","fileName","_jsxFileName","lineNumber","columnNumber","map","time","index","whiteSpace","className","marginLeft","flexGrow","flex","overflowY","overflowX","item","_item$properties$team","team_opponent","rich_text","Date","date","gap","onClick","disabled","ref","autoPlay","playsInline","muted","src","controls","_item$properties","_item$properties$Name","_item$properties$Name2","_item$properties$Name3","_item$properties2","_item$properties2$fir","_item$properties2$fir2","_item$properties2$fir3","_item$properties3","_item$properties3$las","_item$properties3$las2","_item$properties3$las3","_item$properties4","_item$properties4$bac","_item$properties4$bac2","_item$properties4$bac3","playerName","firstName","first_name","lastName","last_name","backNumber","back_number","backgroundColor","padding","border","backgroundPosition","backgroundImage","backgroundSize","wordWrap","overflowWrap","onChange","_item$properties5","_item$properties5$Nam","_item$properties5$Nam2","_item$properties5$Nam3","checked","_c","$RefreshReg$"],"sources":["/Users/yujinyi/Desktop/basket-stats-app/frontend/src/pages/Game.js"],"sourcesContent":["import { useLocation } from \"react-router-dom\";\nimport { useState, useEffect, useRef } from \"react\";\nimport RecordingVideo from \"../components/RecordingVideo\";\n\nexport default function Game() {\n  const location = useLocation();\n  const { team = {}, players = [] } = location.state || {}; // Ensure safe defaults\n  const teamName = team.properties?.Name?.title?.[0]?.plain_text || \"Unknown Team\";\n\n  const [data, setData] = useState([]); // playing players buttons\n\n  const [games, setGames] = useState([]);\n\n    // ------ RECORDING ------\n    const [recording, setRecording] = useState(false);\n    const [duration, setDuration] = useState(0);\n\n    const [videoURL, setVideoURL] = useState(null);\n    const [blobData, setBlobData] = useState(null);\n\n    const [uploading, setUploading] = useState(false);\n    const [uploadedVideoUrl, setUploadedVideoUrl] = useState(null);\n\n    const [fetchedVideoUrl, setFetchedVideoUrl] = useState(null);\n\n    const streamRef = useRef(null);\n    const videoRef = useRef(null);\n    const mediaRecorderRef = useRef(null);\n    const chunksRef = useRef([]);\n    const timerRef = useRef(null);\n\n    const [timestamps, setTimestamps] = useState([]); // ✅ State for timestamps\n    const [timestampData, setTimestampData] = useState(null); // ✅ JSON output state\n\n    const startRecording = async () => {\n        try {\n            const stream = await navigator.mediaDevices.getUserMedia({ \n                video: true,\n                audio: true\n              });\n\n              streamRef.current = stream;\n\n              if( videoRef.current ){\n                videoRef.current.srcObject = stream;\n              }\n\n            const mediaRecorder = new MediaRecorder(stream);\n            \n            mediaRecorderRef.current = mediaRecorder;\n            chunksRef.current = [];\n\n            mediaRecorder.ondataavailable = (event) => {\n                if (event.data.size > 0) {\n                chunksRef.current.push(event.data);\n                }\n            };\n\n            mediaRecorder.start(1000);\n            setRecording(true);\n            setTimestamps([]); // reset\n            setTimestampData(null); //reset\n\n            setDuration(0);\n            timerRef.current = setInterval(() => {\n                setDuration((prev) => prev + 1);\n            }, 1000);\n\n            mediaRecorder.onstop = () => {\n                const blob = new Blob(chunksRef.current, { type: \"video/webm\" });\n                setVideoURL(URL.createObjectURL(blob));\n                setBlobData(blob);\n                clearInterval(timerRef.current);\n            };\n        } catch (error) {\n            console.log(`Camera access error : ${error.message}`);\n        }\n    }\n\n    const endRecording = () => {\n        if ( mediaRecorderRef.current && mediaRecorderRef.current.state !== \"inactive\" ) {\n            mediaRecorderRef.current.stop();\n            streamRef.current?.getTracks().forEach((track) => track.stop());\n\n            setRecording(false);\n            clearInterval(timerRef.current);\n        }\n    }\n\n    const uploadRecording = async () => {\n        if ( !blobData ) {\n          console.log(`no blob data!`);\n          return;\n        }\n    \n        try {\n          setUploading(true);\n\n          const formData = new FormData();\n          formData.append('video', blobData, 'recording.webm');\n          \n          console.log(\"Uploading file of size:\", blobData.size);\n        \n          const response = await fetch(\"http://localhost:8000/upload-video\", {\n            method: \"POST\",\n            body: formData,\n          });\n    \n          const data = await response.json();\n          \n          if (!response.ok) {\n            throw new Error(data.error || data.details || `Server error: ${response.status}`);\n          }\n    \n          setUploadedVideoUrl(data.fileUrl);\n\n          // await postUrl(\"Name of Video\", data.fileUrl);\n\n          alert(\"Video uploaded successfully!\");\n        } catch (error) {\n          console.error(\"Error during upload:\", error);\n          console.log(error.message);\n        } finally {\n          setUploading(false);\n        }\n    };\n\n    const getVideo = async () => {\n      if ( !uploadedVideoUrl ) {\n        alert(\"No uploaded video URL yet. Upload first!\");\n        return;\n      }\n  \n      try {\n        const fileKey = uploadedVideoUrl.split(\"?\")[0].split(\"/\").pop();\n        console.log(\"Fetching video for fileKey:\", fileKey);\n  \n        const response = await fetch(`http://localhost:8000/get-video-url/${fileKey}`);\n        \n        const data = await response.json();\n  \n        if (!response.ok) {\n          throw new Error(data.error || `Server error: ${response.status}`);\n        }\n  \n        console.log(\"Got presigned URL:\", data.fileUrl);\n  \n        setFetchedVideoUrl(data.fileUrl);\n      } catch (error) {\n        console.error(\"Error fetching video URL:\", error);\n      }\n    };\n\n    // POST TO GAMES\n    const postToGames = async ( name, url, log ) => {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/create-a-page-games\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n              name,\n              url,\n              log\n          }),\n        });\n  \n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n  \n        console.log(\"Url is posted to DB successfully\");\n      } catch (error) {\n        console.error(\"Error posting url to DB:\", error.message);\n      }\n    };\n\n    const logTimestamp = (id, name) => {\n        if (recording) {\n            setTimestamps((prev) => [...prev, { id, timestamp: duration, name }]);\n            console.log(`Timestamp recorded: ${id} - ${duration}s - ${name}`);\n        }\n    };        \n\n    const fetchGames = async ( id ) => {        \n      try {\n        const response = await fetch(\"http://localhost:8000/api/query-a-database-games\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            id\n          })\n        });\n  \n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n  \n        const result = await response.json();\n\n        console.log(result);\n        setGames(result);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error.message);\n      }\n  };\n  \n  useEffect(() => {\n    fetchGames(team.id);\n  }, []);\n\n  // -----------\n\n  const handleCheckboxChange = (player) => {\n      setData((prevData) => {\n          if (prevData.some((p) => p.id === player.id)) {\n              return prevData.filter((p) => p.id !== player.id);\n          } else {\n              return [...prevData, { id: player.id, name: player.name }];\n          }\n      });\n  };\n\n  return (\n    <div style = { { display : \"flex\", flexDirection : \"row\", paddingTop : \"64px\", width : \"100vw\", height : \"100vh\" } }>\n      <div style = { { width : \"200px\", minWidth: \"200px\", height : \"100%\", overflow : \"scroll\", position : \"fixed\" } }>\n        <p>Highlights ({ timestamps.length})</p>\n        {timestamps.map((time, index) => (\n            <p key = { index } style = { { whiteSpace : \"nowrap\"} }>⏱ {time.timestamp} : {time.name} </p>\n        ))}\n      </div>        \n\n      <div className=\"\" style = { { width : \"100%\", marginLeft : \"200px\", flexGrow : 1, flex : 1, overflowY : \"auto\", overflowX: \"hidden\", display : \"flex\", flexDirection : \"column\" } }>\n        <h1>{teamName}</h1>\n        <p className = \"meta\">Choose the game</p>\n\n        <select style = { { width : \"400x\" } }>\n          { games.map( ( item, index ) => (\n            <option key = { index }>vs. { item.properties.team_opponent.rich_text[0]?.plain_text } | { item.properties.Date.date.start }</option>\n          ))}\n        </select>\n\n        <div style = { { display : \"flex\", flexDirection : \"row\", gap : \"8px\" } }>\n          <button onClick = { startRecording }>Start Recording</button>\n          <button onClick = { endRecording } disabled = { !recording }>End Recording</button>\n          <button onClick = { uploadRecording } disabled = { !videoURL || uploading }>{ uploading ? \"Uploading...\" : \"Upload Video to S3\" }</button>\n          <button onClick = { getVideo } disabled = {!uploadedVideoUrl}>Get Uploaded Video</button>\n\n          <button onClick = { () => postToGames(\"Name test\", uploadedVideoUrl, JSON.stringify(timestamps)) } disabled = { !videoURL || uploading || timestamps.length === 0 }>POST to DB (Games)</button>\n\n          <button onClick = { logTimestamp } disabled={!recording}>TEST Log Timestamp</button>\n          <button onClick = { () => console.log(timestamps) } disabled = { timestamps.length === 0 }>Console.log Timestamp</button>\n        </div>\n\n        <h1>{ `${duration}s` }</h1>\n\n        { blobData ? `size : ${blobData.size}bytes` : \"\" }\n\n        <div>\n          {/* LIVE VIDEO */}\n          <video className = \"liveVideo\" ref = { videoRef }  style = { { display: videoURL && !recording ? 'none' : 'block' } }  autoPlay playsInline muted width = \"100%\"/>\n\n          {/* PLAYER VIDEO */}\n          { videoURL && !recording &&  <video className = \"playbackVideo\" src = { videoURL } controls width = \"100%\"/> }\n\n          {/* FETCHED VIDEO FROM SERVER */}\n          { fetchedVideoUrl && <video className = \"fetchedVideo\" src = { fetchedVideoUrl } controls/> }\n        </div>\n\n        {/* <RecordingVideo /> */}\n\n        <h2>Playing ({data.length})</h2>\n        <p className=\"meta\">Press Player for Highlight</p>\n\n        <div style={{ display: \"flex\", flexDirection: \"row\", gap: \"8px\" }}>\n            {data.map((item, index) => (\n                <button key={item.id || index} onClick={() => logTimestamp(item.id, item.name)}>\n                    {item.name}\n                </button>\n            ))}\n        </div>\n\n\n        <hr/><br/><br/>\n\n        <h2>Players ({players.length})</h2>\n        <p className=\"meta\">Select Players</p>\n\n        {/* Players List */}\n        <div style={{ display: \"flex\", flexDirection: \"row\", gap: \"8px\", width : \"100%\", overflow : \"scroll\" }}>\n            {players.map((item, index) => {\n                const playerName = item.properties?.Name?.title?.[0]?.plain_text || \"Unnamed Player\";\n                const firstName = item.properties?.first_name?.rich_text?.[0]?.plain_text || \"\";\n                const lastName = item.properties?.last_name?.rich_text?.[0]?.plain_text || \"\";\n                const backNumber = item.properties?.back_number?.rich_text?.[0]?.plain_text || \"N/A\";\n\n                return (\n                    <div key={item.id || index} style={{ backgroundColor: \"var(--black8)\", padding: \"8px\" }}>\n                        <div style={{\n                            width : \"80px\",\n                            height: \"80px\",\n                            border: \"1px solid var(--black8)\",\n                            backgroundPosition: \"center\",\n                            backgroundImage: \"url(https://www.tottenhamhotspur.com/media/5y3crbxe/firstteam_profiles_mickyvandeven_202425_1.png?anchor=center&mode=crop&quality=90&width=500)\",\n                            backgroundSize: \"cover\"\n                        }} />\n                        <p className=\"number\">{backNumber}</p>\n                        <p>{playerName}</p>\n                        <p className=\"meta\" style={{ whiteSpace: \"normal\", wordWrap: \"break-word\", overflowWrap: \"break-word\" }}>\n                            {firstName} {lastName}\n                        </p>\n                        <input\n                            type=\"checkbox\"\n                            onChange={() =>\n                                handleCheckboxChange({\n                                    id: item.id,\n                                    name: item.properties?.Name?.title?.[0]?.plain_text || \"Unknown\",\n                                })\n                            }\n                            checked={data.some((p) => p.id === item.id)}\n                        />\n\n                    </div>\n                );\n            })}\n        </div>\n    </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}