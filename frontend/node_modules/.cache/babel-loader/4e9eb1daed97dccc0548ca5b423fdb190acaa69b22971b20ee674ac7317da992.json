{"ast":null,"code":"var _jsxFileName = \"/Users/yujinyi/Desktop/basket-stats-app/frontend/src/components/Chip.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chip({\n  text,\n  color\n}) {\n  const hexToRgba = (hex, opacity) => {\n    if (typeof hex !== \"string\") return \"transparent\"; // Prevent TypeError\n    const bigint = parseInt(hex.replace(\"#\", \"\"), 16);\n    const r = bigint >> 16 & 255;\n    const g = bigint >> 8 & 255;\n    const b = bigint & 255;\n    return `rgba(${r}, ${g}, ${b}, ${opacity})`;\n  };\n  const validColor = typeof color === \"string\" && color.startsWith(\"#\") ? color : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      backgroundColor: validColor ? hexToRgba(validColor, 0.16) : \"transparent\",\n      color: validColor || \"inherit\",\n      border: `1px solid ${validColor ? hexToRgba(validColor, 0.16) : \"transparent\"}`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"chip\",\n      style: {\n        padding: \"0px 16px\"\n      },\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n_c = Chip;\nvar _c;\n$RefreshReg$(_c, \"Chip\");","map":{"version":3,"names":["Chip","text","color","hexToRgba","hex","opacity","bigint","parseInt","replace","r","g","b","validColor","startsWith","_jsxDEV","style","display","justifyContent","backgroundColor","border","children","className","padding","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yujinyi/Desktop/basket-stats-app/frontend/src/components/Chip.js"],"sourcesContent":["export default function Chip({ text, color }) {\n    const hexToRgba = (hex, opacity) => {\n        if (typeof hex !== \"string\") return \"transparent\"; // Prevent TypeError\n        const bigint = parseInt(hex.replace(\"#\", \"\"), 16);\n        const r = (bigint >> 16) & 255;\n        const g = (bigint >> 8) & 255;\n        const b = bigint & 255;\n\n        return `rgba(${r}, ${g}, ${b}, ${opacity})`;\n    };\n\n    const validColor = typeof color === \"string\" && color.startsWith(\"#\") ? color : null;\n\n    return (\n        <div\n            style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                backgroundColor: validColor ? hexToRgba(validColor, 0.16) : \"transparent\",\n                color: validColor || \"inherit\",\n                border: `1px solid ${validColor ? hexToRgba(validColor, 0.16) : \"transparent\"}`,\n            }}\n        >\n            <p className=\"chip\" style={{ padding: \"0px 16px\" }}>{text}</p>\n        </div>\n    );\n}\n"],"mappings":";;AAAA,eAAe,SAASA,IAAIA,CAAC;EAAEC,IAAI;EAAEC;AAAM,CAAC,EAAE;EAC1C,MAAMC,SAAS,GAAGA,CAACC,GAAG,EAAEC,OAAO,KAAK;IAChC,IAAI,OAAOD,GAAG,KAAK,QAAQ,EAAE,OAAO,aAAa,CAAC,CAAC;IACnD,MAAME,MAAM,GAAGC,QAAQ,CAACH,GAAG,CAACI,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;IACjD,MAAMC,CAAC,GAAIH,MAAM,IAAI,EAAE,GAAI,GAAG;IAC9B,MAAMI,CAAC,GAAIJ,MAAM,IAAI,CAAC,GAAI,GAAG;IAC7B,MAAMK,CAAC,GAAGL,MAAM,GAAG,GAAG;IAEtB,OAAO,QAAQG,CAAC,KAAKC,CAAC,KAAKC,CAAC,KAAKN,OAAO,GAAG;EAC/C,CAAC;EAED,MAAMO,UAAU,GAAG,OAAOV,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACW,UAAU,CAAC,GAAG,CAAC,GAAGX,KAAK,GAAG,IAAI;EAEpF,oBACIY,OAAA;IACIC,KAAK,EAAE;MACHC,OAAO,EAAE,MAAM;MACfC,cAAc,EAAE,QAAQ;MACxBC,eAAe,EAAEN,UAAU,GAAGT,SAAS,CAACS,UAAU,EAAE,IAAI,CAAC,GAAG,aAAa;MACzEV,KAAK,EAAEU,UAAU,IAAI,SAAS;MAC9BO,MAAM,EAAE,aAAaP,UAAU,GAAGT,SAAS,CAACS,UAAU,EAAE,IAAI,CAAC,GAAG,aAAa;IACjF,CAAE;IAAAQ,QAAA,eAEFN,OAAA;MAAGO,SAAS,EAAC,MAAM;MAACN,KAAK,EAAE;QAAEO,OAAO,EAAE;MAAW,CAAE;MAAAF,QAAA,EAAEnB;IAAI;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAEd;AAACC,EAAA,GA1BuB3B,IAAI;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}