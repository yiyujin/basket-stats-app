{"ast":null,"code":"var _jsxFileName = \"/Users/yujinyi/Desktop/basket-stats-app/frontend/src/pages/Game.js\",\n  _s = $RefreshSig$();\nimport { useLocation } from \"react-router-dom\";\nimport { useState, useEffect, useRef } from \"react\";\nimport RecordingVideo from \"../components/RecordingVideo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  _s();\n  var _team$properties, _team$properties$Name, _team$properties$Name2, _team$properties$Name3;\n  // ------ RECORDING ------\n  const [recording, setRecording] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [videoURL, setVideoURL] = useState(null);\n  const [blobData, setBlobData] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [uploadedVideoUrl, setUploadedVideoUrl] = useState(null);\n  const [fetchedVideoUrl, setFetchedVideoUrl] = useState(null);\n  const streamRef = useRef(null);\n  const videoRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const chunksRef = useRef([]);\n  const timerRef = useRef(null);\n  const [timestamps, setTimestamps] = useState([]); // ✅ State for timestamps\n  const [timestampData, setTimestampData] = useState(null); // ✅ JSON output state\n\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n      streamRef.current = stream;\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      chunksRef.current = [];\n      mediaRecorder.ondataavailable = event => {\n        if (event.data.size > 0) {\n          chunksRef.current.push(event.data);\n        }\n      };\n      mediaRecorder.start(1000);\n      setRecording(true);\n      setTimestamps([]); // reset\n      setTimestampData(null); //reset\n\n      setDuration(0);\n      timerRef.current = setInterval(() => {\n        setDuration(prev => prev + 1);\n      }, 1000);\n      mediaRecorder.onstop = () => {\n        const blob = new Blob(chunksRef.current, {\n          type: \"video/webm\"\n        });\n        setVideoURL(URL.createObjectURL(blob));\n        setBlobData(blob);\n        clearInterval(timerRef.current);\n      };\n    } catch (error) {\n      console.log(`Camera access error : ${error.message}`);\n    }\n  };\n  const endRecording = () => {\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state !== \"inactive\") {\n      var _streamRef$current;\n      mediaRecorderRef.current.stop();\n      (_streamRef$current = streamRef.current) === null || _streamRef$current === void 0 ? void 0 : _streamRef$current.getTracks().forEach(track => track.stop());\n      setRecording(false);\n      clearInterval(timerRef.current);\n    }\n  };\n  const uploadRecording = async () => {\n    if (!blobData) {\n      console.log(`no blob data!`);\n      return;\n    }\n    try {\n      setUploading(true);\n      const formData = new FormData();\n      formData.append('video', blobData, 'recording.webm');\n      console.log(\"Uploading file of size:\", blobData.size);\n      const response = await fetch(\"http://localhost:8000/upload-video\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || data.details || `Server error: ${response.status}`);\n      }\n      setUploadedVideoUrl(data.fileUrl);\n      await postUrl(\"Name of Video\", data.fileUrl);\n      alert(\"Video uploaded successfully!\");\n    } catch (error) {\n      console.error(\"Error during upload:\", error);\n      console.log(error.message);\n    } finally {\n      setUploading(false);\n    }\n  };\n  const getVideo = async () => {\n    if (!uploadedVideoUrl) {\n      alert(\"No uploaded video URL yet. Upload first!\");\n      return;\n    }\n    try {\n      const fileKey = uploadedVideoUrl.split(\"?\")[0].split(\"/\").pop();\n      console.log(\"Fetching video for fileKey:\", fileKey);\n      const response = await fetch(`http://localhost:8000/get-video-url/${fileKey}`);\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || `Server error: ${response.status}`);\n      }\n      console.log(\"Got presigned URL:\", data.fileUrl);\n      setFetchedVideoUrl(data.fileUrl);\n    } catch (error) {\n      console.error(\"Error fetching video URL:\", error);\n    }\n  };\n\n  // POST Url to Database\n  const postUrl = async (name, url) => {\n    try {\n      const response = await fetch(\"http://localhost:8000/api/create-a-page\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name,\n          url\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      console.log(\"Url is posted to DB successfully\");\n    } catch (error) {\n      console.error(\"Error posting url to DB:\", error.message);\n    }\n  };\n  const logTimestamp = () => {\n    if (recording) {\n      setTimestamps(prev => [...prev, duration]); // ✅ Use duration state\n      console.log(`📍 Timestamp: ${duration}s`);\n    }\n  };\n  const uploadTimestamp = () => {\n    if (timestamps.length === 0) {\n      console.warn(\"No timestamps to upload!\");\n      return;\n    }\n    const jsonData = {\n      video_name: \"Recording\",\n      duration: duration,\n      // Total duration of recording\n      timestamps: timestamps.map(time => ({\n        timestamp: time\n      })) // Convert to JSON structure\n    };\n    setTimestampData(jsonData); // ✅ Save JSON to state\n    console.log(\"jsonData:\", jsonData);\n  };\n\n  // -----------\n\n  const location = useLocation();\n  const {\n    team = {},\n    players = []\n  } = location.state || {}; // Ensure safe defaults\n  const teamName = ((_team$properties = team.properties) === null || _team$properties === void 0 ? void 0 : (_team$properties$Name = _team$properties.Name) === null || _team$properties$Name === void 0 ? void 0 : (_team$properties$Name2 = _team$properties$Name.title) === null || _team$properties$Name2 === void 0 ? void 0 : (_team$properties$Name3 = _team$properties$Name2[0]) === null || _team$properties$Name3 === void 0 ? void 0 : _team$properties$Name3.plain_text) || \"Unknown Team\";\n  const [data, setData] = useState([]); // playing players buttons\n\n  const handleCheckboxChange = player => {\n    setData(prevData => {\n      if (prevData.some(p => p.id === player.id)) {\n        return prevData.filter(p => p.id !== player.id);\n      } else {\n        return [...prevData, player];\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: teamName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Start Recording Game for \", teamName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startRecording,\n      children: \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: endRecording,\n      disabled: !recording,\n      children: \"End Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadRecording,\n      disabled: !videoURL || uploading,\n      children: uploading ? \"Uploading...\" : \"Upload Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getVideo,\n      disabled: !uploadedVideoUrl,\n      children: \"Get Uploaded Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => postUrl(\"Name test\", \"url test\"),\n      children: \"TEST Upload to DB Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logTimestamp,\n      disabled: !recording,\n      children: \"TEST Log Timestamp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadTimestamp,\n      disabled: timestamps.length === 0,\n      children: \"Upload Timestamp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }, this), recording ? `${duration}s` : \"\", /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Timestamps:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this), timestamps.map((time, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u23F1 \", time, \"s\"]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 21\n    }, this)), blobData ? `size : ${blobData.size}bytes` : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        className: \"liveVideo\",\n        ref: videoRef,\n        style: {\n          display: videoURL && !recording ? 'none' : 'block'\n        },\n        autoPlay: true,\n        playsInline: true,\n        muted: true,\n        width: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), videoURL && !recording && /*#__PURE__*/_jsxDEV(\"video\", {\n        className: \"playbackVideo\",\n        src: videoURL,\n        controls: true,\n        width: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 46\n      }, this), fetchedVideoUrl && /*#__PURE__*/_jsxDEV(\"video\", {\n        className: \"fetchedVideo\",\n        src: fetchedVideoUrl,\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Playing (\", data.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"meta\",\n      children: \"Press the player button to timestamp highlight\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        gap: \"8px\"\n      },\n      children: data.map((player, index) => {\n        var _player$properties, _player$properties$Na, _player$properties$Na2, _player$properties$Na3;\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logTimestamp,\n          children: (_player$properties = player.properties) === null || _player$properties === void 0 ? void 0 : (_player$properties$Na = _player$properties.Name) === null || _player$properties$Na === void 0 ? void 0 : (_player$properties$Na2 = _player$properties$Na.title) === null || _player$properties$Na2 === void 0 ? void 0 : (_player$properties$Na3 = _player$properties$Na2[0]) === null || _player$properties$Na3 === void 0 ? void 0 : _player$properties$Na3.plain_text\n        }, player.id || index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Players (\", players.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"meta\",\n      children: \"Choose players playing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        gap: \"8px\"\n      },\n      children: players.map((item, index) => {\n        var _item$properties, _item$properties$Name, _item$properties$Name2, _item$properties$Name3, _item$properties2, _item$properties2$fir, _item$properties2$fir2, _item$properties2$fir3, _item$properties3, _item$properties3$las, _item$properties3$las2, _item$properties3$las3, _item$properties4, _item$properties4$bac, _item$properties4$bac2, _item$properties4$bac3;\n        const playerName = ((_item$properties = item.properties) === null || _item$properties === void 0 ? void 0 : (_item$properties$Name = _item$properties.Name) === null || _item$properties$Name === void 0 ? void 0 : (_item$properties$Name2 = _item$properties$Name.title) === null || _item$properties$Name2 === void 0 ? void 0 : (_item$properties$Name3 = _item$properties$Name2[0]) === null || _item$properties$Name3 === void 0 ? void 0 : _item$properties$Name3.plain_text) || \"Unnamed Player\";\n        const firstName = ((_item$properties2 = item.properties) === null || _item$properties2 === void 0 ? void 0 : (_item$properties2$fir = _item$properties2.first_name) === null || _item$properties2$fir === void 0 ? void 0 : (_item$properties2$fir2 = _item$properties2$fir.rich_text) === null || _item$properties2$fir2 === void 0 ? void 0 : (_item$properties2$fir3 = _item$properties2$fir2[0]) === null || _item$properties2$fir3 === void 0 ? void 0 : _item$properties2$fir3.plain_text) || \"\";\n        const lastName = ((_item$properties3 = item.properties) === null || _item$properties3 === void 0 ? void 0 : (_item$properties3$las = _item$properties3.last_name) === null || _item$properties3$las === void 0 ? void 0 : (_item$properties3$las2 = _item$properties3$las.rich_text) === null || _item$properties3$las2 === void 0 ? void 0 : (_item$properties3$las3 = _item$properties3$las2[0]) === null || _item$properties3$las3 === void 0 ? void 0 : _item$properties3$las3.plain_text) || \"\";\n        const backNumber = ((_item$properties4 = item.properties) === null || _item$properties4 === void 0 ? void 0 : (_item$properties4$bac = _item$properties4.back_number) === null || _item$properties4$bac === void 0 ? void 0 : (_item$properties4$bac2 = _item$properties4$bac.rich_text) === null || _item$properties4$bac2 === void 0 ? void 0 : (_item$properties4$bac3 = _item$properties4$bac2[0]) === null || _item$properties4$bac3 === void 0 ? void 0 : _item$properties4$bac3.plain_text) || \"N/A\";\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100px\",\n            backgroundColor: \"var(--black8)\",\n            padding: \"8px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: \"80px\",\n              border: \"1px solid var(--black8)\",\n              backgroundPosition: \"center\",\n              backgroundImage: \"url(https://www.tottenhamhotspur.com/media/5y3crbxe/firstteam_profiles_mickyvandeven_202425_1.png?anchor=center&mode=crop&quality=90&width=500)\",\n              backgroundSize: \"cover\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"number\",\n            children: backNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: playerName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"meta\",\n            style: {\n              whiteSpace: \"normal\",\n              wordWrap: \"break-word\",\n              overflowWrap: \"break-word\"\n            },\n            children: [firstName, \" \", lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: () => handleCheckboxChange(item),\n            checked: data.some(p => p.id === item.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 29\n          }, this)]\n        }, item.id || index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 9\n  }, this);\n}\n_s(Game, \"/vTEK0biqi65VBo3hRKvjqPJP0k=\", false, function () {\n  return [useLocation];\n});\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useLocation","useState","useEffect","useRef","RecordingVideo","jsxDEV","_jsxDEV","Game","_s","_team$properties","_team$properties$Name","_team$properties$Name2","_team$properties$Name3","recording","setRecording","duration","setDuration","videoURL","setVideoURL","blobData","setBlobData","uploading","setUploading","uploadedVideoUrl","setUploadedVideoUrl","fetchedVideoUrl","setFetchedVideoUrl","streamRef","videoRef","mediaRecorderRef","chunksRef","timerRef","timestamps","setTimestamps","timestampData","setTimestampData","startRecording","stream","navigator","mediaDevices","getUserMedia","video","audio","current","srcObject","mediaRecorder","MediaRecorder","ondataavailable","event","data","size","push","start","setInterval","prev","onstop","blob","Blob","type","URL","createObjectURL","clearInterval","error","console","log","message","endRecording","state","_streamRef$current","stop","getTracks","forEach","track","uploadRecording","formData","FormData","append","response","fetch","method","body","json","ok","Error","details","status","fileUrl","postUrl","alert","getVideo","fileKey","split","pop","name","url","headers","JSON","stringify","logTimestamp","uploadTimestamp","length","warn","jsonData","video_name","map","time","timestamp","location","team","players","teamName","properties","Name","title","plain_text","setData","handleCheckboxChange","player","prevData","some","p","id","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","index","ref","style","display","autoPlay","playsInline","muted","width","src","controls","flexDirection","gap","_player$properties","_player$properties$Na","_player$properties$Na2","_player$properties$Na3","item","_item$properties","_item$properties$Name","_item$properties$Name2","_item$properties$Name3","_item$properties2","_item$properties2$fir","_item$properties2$fir2","_item$properties2$fir3","_item$properties3","_item$properties3$las","_item$properties3$las2","_item$properties3$las3","_item$properties4","_item$properties4$bac","_item$properties4$bac2","_item$properties4$bac3","playerName","firstName","first_name","rich_text","lastName","last_name","backNumber","back_number","backgroundColor","padding","height","border","backgroundPosition","backgroundImage","backgroundSize","whiteSpace","wordWrap","overflowWrap","onChange","checked","_c","$RefreshReg$"],"sources":["/Users/yujinyi/Desktop/basket-stats-app/frontend/src/pages/Game.js"],"sourcesContent":["import { useLocation } from \"react-router-dom\";\nimport { useState, useEffect, useRef } from \"react\";\nimport RecordingVideo from \"../components/RecordingVideo\";\n\nexport default function Game() {\n    // ------ RECORDING ------\n        const [recording, setRecording] = useState(false);\n        const [duration, setDuration] = useState(0);\n    \n        const [videoURL, setVideoURL] = useState(null);\n        const [blobData, setBlobData] = useState(null);\n    \n        const [uploading, setUploading] = useState(false);\n        const [uploadedVideoUrl, setUploadedVideoUrl] = useState(null);\n    \n        const [fetchedVideoUrl, setFetchedVideoUrl] = useState(null);\n    \n        const streamRef = useRef(null);\n        const videoRef = useRef(null);\n        const mediaRecorderRef = useRef(null);\n        const chunksRef = useRef([]);\n        const timerRef = useRef(null);\n    \n        const [timestamps, setTimestamps] = useState([]); // ✅ State for timestamps\n        const [timestampData, setTimestampData] = useState(null); // ✅ JSON output state\n    \n        const startRecording = async () => {\n            try {\n                const stream = await navigator.mediaDevices.getUserMedia({ \n                    video: true,\n                    audio: true\n                  });\n    \n                  streamRef.current = stream;\n    \n                  if( videoRef.current ){\n                    videoRef.current.srcObject = stream;\n                  }\n    \n                const mediaRecorder = new MediaRecorder(stream);\n                \n                mediaRecorderRef.current = mediaRecorder;\n                chunksRef.current = [];\n    \n                mediaRecorder.ondataavailable = (event) => {\n                    if (event.data.size > 0) {\n                    chunksRef.current.push(event.data);\n                    }\n                };\n    \n                mediaRecorder.start(1000);\n                setRecording(true);\n                setTimestamps([]); // reset\n                setTimestampData(null); //reset\n    \n                setDuration(0);\n                timerRef.current = setInterval(() => {\n                    setDuration((prev) => prev + 1);\n                }, 1000);\n    \n                mediaRecorder.onstop = () => {\n                    const blob = new Blob(chunksRef.current, { type: \"video/webm\" });\n                    setVideoURL(URL.createObjectURL(blob));\n                    setBlobData(blob);\n                    clearInterval(timerRef.current);\n                };\n            } catch (error) {\n                console.log(`Camera access error : ${error.message}`);\n            }\n        }\n    \n        const endRecording = () => {\n            if ( mediaRecorderRef.current && mediaRecorderRef.current.state !== \"inactive\" ) {\n                mediaRecorderRef.current.stop();\n                streamRef.current?.getTracks().forEach((track) => track.stop());\n    \n                setRecording(false);\n                clearInterval(timerRef.current);\n            }\n        }\n    \n        const uploadRecording = async () => {\n            if ( !blobData ) {\n              console.log(`no blob data!`);\n              return;\n            }\n        \n            try {\n              setUploading(true);\n    \n              const formData = new FormData();\n              formData.append('video', blobData, 'recording.webm');\n              \n              console.log(\"Uploading file of size:\", blobData.size);\n            \n              const response = await fetch(\"http://localhost:8000/upload-video\", {\n                method: \"POST\",\n                body: formData,\n              });\n        \n              const data = await response.json();\n              \n              if (!response.ok) {\n                throw new Error(data.error || data.details || `Server error: ${response.status}`);\n              }\n        \n              setUploadedVideoUrl(data.fileUrl);\n    \n              await postUrl(\"Name of Video\", data.fileUrl);\n    \n              alert(\"Video uploaded successfully!\");\n            } catch (error) {\n              console.error(\"Error during upload:\", error);\n              console.log(error.message);\n            } finally {\n              setUploading(false);\n            }\n        };\n    \n        const getVideo = async () => {\n          if ( !uploadedVideoUrl ) {\n            alert(\"No uploaded video URL yet. Upload first!\");\n            return;\n          }\n      \n          try {\n            const fileKey = uploadedVideoUrl.split(\"?\")[0].split(\"/\").pop();\n            console.log(\"Fetching video for fileKey:\", fileKey);\n      \n            const response = await fetch(`http://localhost:8000/get-video-url/${fileKey}`);\n            \n            const data = await response.json();\n      \n            if (!response.ok) {\n              throw new Error(data.error || `Server error: ${response.status}`);\n            }\n      \n            console.log(\"Got presigned URL:\", data.fileUrl);\n      \n            setFetchedVideoUrl(data.fileUrl);\n          } catch (error) {\n            console.error(\"Error fetching video URL:\", error);\n          }\n        };\n    \n        // POST Url to Database\n        const postUrl = async ( name, url ) => {\n          try {\n            const response = await fetch(\"http://localhost:8000/api/create-a-page\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                  name,\n                  url\n              }),\n            });\n      \n            if (!response.ok) {\n              throw new Error(\"Network response was not ok\");\n            }\n      \n            console.log(\"Url is posted to DB successfully\");\n          } catch (error) {\n            console.error(\"Error posting url to DB:\", error.message);\n          }\n        };\n    \n        const logTimestamp = () => {\n          if (recording) {\n              setTimestamps((prev) => [...prev, duration]); // ✅ Use duration state\n              console.log(`📍 Timestamp: ${duration}s`);\n          }\n      };\n    \n      const uploadTimestamp = () => {\n        if (timestamps.length === 0) {\n            console.warn(\"No timestamps to upload!\");\n            return;\n        }\n    \n        const jsonData = {\n            video_name: \"Recording\",\n            duration: duration, // Total duration of recording\n            timestamps: timestamps.map(time => ({ timestamp: time })) // Convert to JSON structure\n        };\n    \n        setTimestampData(jsonData); // ✅ Save JSON to state\n        console.log(\"jsonData:\", jsonData);\n    };\n\n    // -----------\n\n    const location = useLocation();\n    const { team = {}, players = [] } = location.state || {}; // Ensure safe defaults\n    const teamName = team.properties?.Name?.title?.[0]?.plain_text || \"Unknown Team\";\n\n    const [data, setData] = useState([]); // playing players buttons\n\n    const handleCheckboxChange = (player) => {\n        setData((prevData) => {\n            if (prevData.some((p) => p.id === player.id)) {\n                return prevData.filter((p) => p.id !== player.id);\n            } else {\n                return [...prevData, player];\n            }\n        });\n    };\n\n    return (\n        <div className=\"page\">\n            <h1>{teamName}</h1>\n            <p>Start Recording Game for {teamName}</p>\n\n            <button onClick = { startRecording }>Start Recording</button>\n            <button onClick = { endRecording } disabled = { !recording }>End Recording</button>\n            <button onClick = { uploadRecording } disabled = { !videoURL || uploading }>{ uploading ? \"Uploading...\" : \"Upload Video\" }</button>\n            <button onClick = { getVideo } disabled = {!uploadedVideoUrl}>Get Uploaded Video</button>\n\n            <button onClick = { () => postUrl(\"Name test\", \"url test\") }>TEST Upload to DB Test</button>\n\n            <button onClick={logTimestamp} disabled={!recording}>TEST Log Timestamp</button>\n            <button onClick={uploadTimestamp} disabled={timestamps.length === 0}>Upload Timestamp</button>\n\n            { recording ? `${duration}s` : \"\" }\n\n            <h3>Timestamps:</h3>\n                {timestamps.map((time, index) => (\n                    <p key={index}>⏱ {time}s</p>\n                ))}\n\n            { blobData ? `size : ${blobData.size}bytes` : \"\" }\n\n            <div>\n                {/* LIVE VIDEO */}\n                <video className = \"liveVideo\" ref = { videoRef }  style = { { display: videoURL && !recording ? 'none' : 'block' } }  autoPlay playsInline muted width = \"100%\"/>\n\n                {/* PLAYER VIDEO */}\n                { videoURL && !recording &&  <video className = \"playbackVideo\" src = { videoURL } controls width = \"100%\"/> }\n\n                {/* FETCHED VIDEO FROM SERVER */}\n                { fetchedVideoUrl && <video className = \"fetchedVideo\" src = { fetchedVideoUrl } controls/> }\n            </div>\n\n            {/* <RecordingVideo /> */}\n\n\n\n\n\n\n            <h2>Playing ({data.length})</h2>\n            <p className=\"meta\">Press the player button to timestamp highlight</p>\n\n            <div style={{ display: \"flex\", flexDirection: \"row\", gap: \"8px\" }}>\n                {data.map((player, index) => (\n                    <button\n                        key = { player.id || index }\n                        onClick = { logTimestamp }\n                    >\n                        { player.properties?.Name?.title?.[0]?.plain_text }\n                    </button>\n                ))}\n            </div>\n\n            <hr/><br/><br/>\n\n            <h2>Players ({players.length})</h2>\n            <p className=\"meta\">Choose players playing</p>\n\n            {/* Players List */}\n            <div style={{ display: \"flex\", flexDirection: \"row\", gap: \"8px\" }}>\n                {players.map((item, index) => {\n                    const playerName = item.properties?.Name?.title?.[0]?.plain_text || \"Unnamed Player\";\n                    const firstName = item.properties?.first_name?.rich_text?.[0]?.plain_text || \"\";\n                    const lastName = item.properties?.last_name?.rich_text?.[0]?.plain_text || \"\";\n                    const backNumber = item.properties?.back_number?.rich_text?.[0]?.plain_text || \"N/A\";\n\n                    return (\n                        <div key={item.id || index} style={{ width: \"100px\", backgroundColor: \"var(--black8)\", padding: \"8px\" }}>\n                            <div style={{\n                                height: \"80px\",\n                                border: \"1px solid var(--black8)\",\n                                backgroundPosition: \"center\",\n                                backgroundImage: \"url(https://www.tottenhamhotspur.com/media/5y3crbxe/firstteam_profiles_mickyvandeven_202425_1.png?anchor=center&mode=crop&quality=90&width=500)\",\n                                backgroundSize: \"cover\"\n                            }} />\n                            <p className=\"number\">{backNumber}</p>\n                            <p>{playerName}</p>\n                            <p className=\"meta\" style={{ whiteSpace: \"normal\", wordWrap: \"break-word\", overflowWrap: \"break-word\" }}>\n                                {firstName} {lastName}\n                            </p>\n                            <input\n                                type=\"checkbox\"\n                                onChange={() => handleCheckboxChange(item)}\n                                checked={data.some((p) => p.id === item.id)}\n                            />\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}