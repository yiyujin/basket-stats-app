{"ast":null,"code":"var _jsxFileName = \"/Users/yujinyi/Desktop/basket-stats-app/frontend/src/pages/Player.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Player() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const fetchData = async id => {\n    // console.log('sending', id);\n\n    try {\n      const response = await fetch(`http://localhost:8000/api/query-a-database-players`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const result = await response.json();\n      setData(result);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error.message);\n    }\n  };\n\n  //   useEffect(() => {\n  //     fetchData(id);\n  //   }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(Player, \"DIiG1Nj7XQreK7vXgJlWecOhs08=\", false, function () {\n  return [useParams];\n});\n_c = Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","Player","_s","id","data","setData","loading","setLoading","fetchData","response","fetch","method","headers","body","JSON","stringify","ok","Error","result","json","error","console","message","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yujinyi/Desktop/basket-stats-app/frontend/src/pages/Player.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function Player(){\n    const { id } = useParams();\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    const fetchData = async ( id ) => {    \n        // console.log('sending', id);\n    \n        try {\n          const response = await fetch(`http://localhost:8000/api/query-a-database-players`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify( { id : id } ),\n          });\n      \n          if (!response.ok) {\n            throw new Error(\"Network response was not ok\");\n          }\n      \n          const result = await response.json();\n          setData(result);\n        } catch (error) {\n          console.error(\"Error fetching data:\", error.message);\n        }\n      };\n      \n    //   useEffect(() => {\n    //     fetchData(id);\n    //   }, []);\n\n    return(\n        <div className = \"page\">\n        \n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,eAAe,SAASC,MAAMA,CAAA,EAAE;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,CAAC,CAAC;EAE1B,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMY,SAAS,GAAG,MAAQL,EAAE,IAAM;IAC9B;;IAEA,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,oDAAoD,EAAE;QACjFC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAE;UAAEZ,EAAE,EAAGA;QAAG,CAAE;MACpC,CAAC,CAAC;MAEF,IAAI,CAACM,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MAEA,MAAMC,MAAM,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MACpCd,OAAO,CAACa,MAAM,CAAC;IACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACE,OAAO,CAAC;IACtD;EACF,CAAC;;EAEH;EACA;EACA;;EAEA,oBACItB,OAAA;IAAKuB,SAAS,EAAG;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAElB,CAAC;AAEd;AAACzB,EAAA,CAtCuBD,MAAM;EAAA,QACXH,SAAS;AAAA;AAAA8B,EAAA,GADJ3B,MAAM;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}