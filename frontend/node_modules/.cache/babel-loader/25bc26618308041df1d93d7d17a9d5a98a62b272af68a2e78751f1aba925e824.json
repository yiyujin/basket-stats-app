{"ast":null,"code":"var _jsxFileName = \"/Users/yujinyi/Desktop/basket-stats-app/frontend/src/components/VideoRecorder.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoRecorder = () => {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const [videoURL, setVideoURL] = useState(null);\n  const videoRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const streamRef = useRef(null);\n  const chunksRef = useRef([]);\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      streamRef.current = stream;\n\n      // Attach stream to video element\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      chunksRef.current = [];\n      mediaRecorder.ondataavailable = event => {\n        if (event.data.size > 0) {\n          chunksRef.current.push(event.data);\n        }\n      };\n      mediaRecorder.onstop = () => {\n        const blob = new Blob(chunksRef.current, {\n          type: \"video/webm\"\n        });\n        setVideoURL(URL.createObjectURL(blob));\n      };\n      mediaRecorder.start();\n      setRecording(true);\n    } catch (error) {\n      console.error(\"Error accessing media devices:\", error);\n    }\n  };\n  const stopRecording = () => {\n    var _mediaRecorderRef$cur, _streamRef$current;\n    (_mediaRecorderRef$cur = mediaRecorderRef.current) === null || _mediaRecorderRef$cur === void 0 ? void 0 : _mediaRecorderRef$cur.stop();\n    (_streamRef$current = streamRef.current) === null || _streamRef$current === void 0 ? void 0 : _streamRef$current.getTracks().forEach(track => track.stop());\n    setRecording(false);\n  };\n  useEffect(() => {\n    return () => {\n      var _streamRef$current2;\n      // Cleanup on unmount\n      (_streamRef$current2 = streamRef.current) === null || _streamRef$current2 === void 0 ? void 0 : _streamRef$current2.getTracks().forEach(track => track.stop());\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startRecording,\n      disabled: recording,\n      children: \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopRecording,\n      disabled: !recording,\n      children: \"Stop Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: recording ? \"Recording...\" : \"Recorded Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        autoPlay: true,\n        playsInline: true,\n        width: \"400\",\n        hidden: !!videoURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), videoURL && /*#__PURE__*/_jsxDEV(\"video\", {\n        src: videoURL,\n        controls: true,\n        width: \"400\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoRecorder, \"PXZg9HIRiyDLSmTtrWRgAD9Nae8=\");\n_c = VideoRecorder;\nexport default VideoRecorder;\nvar _c;\n$RefreshReg$(_c, \"VideoRecorder\");","map":{"version":3,"names":["useState","useRef","useEffect","jsxDEV","_jsxDEV","VideoRecorder","_s","recording","setRecording","videoURL","setVideoURL","videoRef","mediaRecorderRef","streamRef","chunksRef","startRecording","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","mediaRecorder","MediaRecorder","ondataavailable","event","data","size","push","onstop","blob","Blob","type","URL","createObjectURL","start","error","console","stopRecording","_mediaRecorderRef$cur","_streamRef$current","stop","getTracks","forEach","track","_streamRef$current2","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline","width","hidden","src","controls","_c","$RefreshReg$"],"sources":["/Users/yujinyi/Desktop/basket-stats-app/frontend/src/components/VideoRecorder.js"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\n\nconst VideoRecorder = () => {\n  const [recording, setRecording] = useState(false);\n  const [videoURL, setVideoURL] = useState(null);\n  const videoRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const streamRef = useRef(null);\n  const chunksRef = useRef([]);\n\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n      streamRef.current = stream;\n\n      // Attach stream to video element\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      chunksRef.current = [];\n\n      mediaRecorder.ondataavailable = (event) => {\n        if (event.data.size > 0) {\n          chunksRef.current.push(event.data);\n        }\n      };\n\n      mediaRecorder.onstop = () => {\n        const blob = new Blob(chunksRef.current, { type: \"video/webm\" });\n        setVideoURL(URL.createObjectURL(blob));\n      };\n\n      mediaRecorder.start();\n      setRecording(true);\n    } catch (error) {\n      console.error(\"Error accessing media devices:\", error);\n    }\n  };\n\n  const stopRecording = () => {\n    mediaRecorderRef.current?.stop();\n    streamRef.current?.getTracks().forEach((track) => track.stop());\n    setRecording(false);\n  };\n\n  useEffect(() => {\n    return () => {\n      // Cleanup on unmount\n      streamRef.current?.getTracks().forEach((track) => track.stop());\n    };\n  }, []);\n\n  return (\n    <div>\n      <button onClick={startRecording} disabled={recording}>\n        Start Recording\n      </button>\n      <button onClick={stopRecording} disabled={!recording}>\n        Stop Recording\n      </button>\n\n      <div>\n        <h3>{recording ? \"Recording...\" : \"Recorded Video\"}</h3>\n        <video ref={videoRef} autoPlay playsInline width=\"400\" hidden={!!videoURL} />\n        {videoURL && <video src={videoURL} controls width=\"400\" />}\n      </div>\n    </div>\n  );\n};\n\nexport default VideoRecorder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}